public class Main {
    public static void main(String[] args) {

        int matrizea [][]= new int[24][24];

        boolean balio = true;


        int posizioa =0;
        for (int i =0;i<matrizea.length;i++){
            for (int e =0;e<matrizea.length;e++){
                //Hemen aukeratzen da, datu proba
                matrizea[i][e]= proba2(posizioa);
                posizioa++;
            }
        }

        for (int i =0;i< matrizea.length;i+=8){
            for (int e =0;e<matrizea.length;e+=8){
                balio = txikiak(matrizea, i, e);
                if (!balio){
                    i = 999999999;
                    e = 999999999;
                }
            }
        }
        //txikiak(matrizea, 1, 2);

        imprimatu(matrizea);

        System.out.println(balio);

    }

    public static boolean txikiak(int [][]matrizea, int y, int x){
        int matrizea2 [][]= new int[8][8];

        for (int i =0;i<8;i++){
            for (int e =0;e<8;e++){
                matrizea2[i][e]=matrizea[y+i][x+e];
            }
        }
         return konprobatu(matrizea2);

    }

    public static boolean konprobatu(int [][]matrizea){
        boolean egokia = true;

        int z1 =matrizea[0][0];
        int z2 =10;

        for (int i =0;i<matrizea.length;i++){
            for (int e =0;e<matrizea.length;e++){
                if (z1 != matrizea[i][e] && z2 ==10){
                    z2 = matrizea[i][e];
                }

                if (matrizea[i][e] != z1 && matrizea[i][e] != z2 && z2 !=10 ){
                    egokia = false;
                }
            }
        }

        //imprimatu(matrizea);
        return egokia;
    }


    public static int proba1 (int i){

        int lista[]={4,4,4,4,3,3,3,4,4,3,3,3,4,4,4,4,4,4,3,4,3,3,4,3,4,3,4,4,4,3,3,3,4,4,4,3,4,3,4,3,4,3,3,3,3,3,3,4,4,4,3,3,3,4,4,4,3,3,3,4,4,4,3,4};
        if (i>lista.length-1){
            return lista[1];
        }else {
            return lista[i];
        }
    }
    public static int proba2 (int i){
        int lista[] = {1,1,1,7,1,7,1,7,5,5,5,5,3,3,3,3,5,3,5,5,5,5,3,3,7,1,7,7,1,1,1,1,3,5,3,5,3,5,3,3,3,5,5,3,3,3,5,5,7,7,7,1,1,1,7,1,3,5,3,5,5,3,5,5,5,5,5,5,3,5,3,3,7,1,7,7,1,1,7,1,3,5,3,5,5,5,3,3,3,3,5,3,3,3,5,3,1,1,1,1,1,7,7,7,5,3,5,5,3,3,5,3,3,5,5,5,3,3,5,5,1,7,1,7,1,7,1,7,5,5,5,5,5,3,5,5,5,5,5,5,5,3,5,5,1,1,1,1,7,7,7,7,3,3,3,5,3,3,3,5,3,3,3,5,3,3,5,5,7,7,7,7,7,1,7,1,5,3,5,5,5,3,3,5,5,3,5,5,5,5,5,3,4,4,4,4,2,2,2,2,7,1,7,1,7,1,1,7,3,5,3,5,5,5,5,5,4,2,2,2,2,4,2,4,1,1,1,7,7,7,7,7,3,3,5,5,3,3,3,5,2,4,4,4,2,4,2,4,7,7,7,7,1,7,7,1,3,5,5,5,5,3,5,5,2,2,2,2,2,4,2,4,1,7,7,1,7,1,7,1,3,3,3,5,3,3,3,5,2,4,4,4,4,4,2,2,7,7,1,7,7,7,7,7,3,3,5,5,5,3,3,5,2,2,2,4,4,4,2,4,7,7,7,1,1,7,1,7,3,5,3,5,5,5,3,5,2,4,4,4,2,4,4,2,7,1,7,7,1,1,7,7,5,3,5,5,3,3,3,3,4,4,2,4,2,4,4,4,1,1,1,1,1,7,7,7,5,5,5,5,5,3,5,5,2,2,2,2,2,2,2,4,0,9,0,0,9,9,9,0,7,1,1,1,7,1,1,7,2,4,2,4,4,4,4,4,0,9,0,0,0,0,0,0,7,7,1,1,7,1,1,1,2,4,2,4,2,4,4,4,9,9,0,0,9,0,9,9,1,1,1,7,7,7,7,1,2,4,2,4,4,4,2,4,0,0,0,0,0,0,0,9,7,1,7,7,1,7,7,1,2,2,2,4,2,2,2,2,9,9,0,0,0,0,9,9,1,7,7,1,7,7,7,7,4,4,4,4,2,4,2,4,0,0,0,0,9,9,0,9,7,7,1,7,7,1,1,7,2,4,4,4,2,4,2,4,0,9,0,0,0,9,0,9,7,7,7,1,1,1,7,1,4,4,2,4,2,4,2,4,0,0,0,0,9,0,0,0,7,1,7,7,1,1,7,1};
        if (i>lista.length-1){
            return lista[1];
        }else {
            return lista[i];
        }
    }
    public static int proba3 (int i){
        int lista[]={3,4,4,4,3,3,3,4,4,3,3,3,4,4,4,4,4,4,3,4,3,3,0,3,4,3,4,4,4,3,3,3,4,4,4,3,4,3,4,3,4,3,3,3,3,3,3,4,4,4,3,3,3,4,4,4,3,3,3,4,4,4,3,4};
        if (i>lista.length-1){
            return lista[1];
        }else {
            return lista[i];
        }
    }
    public static int proba4 (int i){
        int lista[]={1,7,1,7,1,7,1,7,5,5,5,5,3,3,3,3,5,3,5,5,5,5,3,3,7,1,7,7,1,1,1,1,3,5,3,5,3,5,3,3,3,5,5,3,3,3,5,5,7,7,7,1,1,1,7,1,3,5,3,5,5,3,5,5,5,5,5,5,3,5,3,3,7,1,7,7,1,1,7,1,3,5,3,5,5,5,3,3,3,3,5,3,3,3,5,3,1,1,1,1,1,7,7,7,5,3,5,5,3,3,5,3,3,5,5,5,3,3,5,5,1,7,1,7,1,7,1,7,5,5,5,5,5,3,5,5,5,5,5,5,5,3,5,5,1,1,1,1,7,7,7,7,3,3,3,5,3,3,3,5,3,3,3,5,3,3,5,5,7,7,7,7,7,1,7,1,5,3,5,5,5,3,3,5,5,3,5,5,5,5,5,3,4,4,4,4,2,2,2,2,7,1,7,1,7,1,1,7,3,5,3,5,5,5,5,5,4,2,2,2,2,4,2,4,1,1,1,7,7,7,7,7,3,3,5,5,3,3,3,5,2,4,4,4,2,4,2,4,7,7,7,7,1,7,7,1,3,5,5,5,5,3,5,5,2,2,2,2,2,4,2,4,1,7,7,1,7,1,7,1,3,3,3,5,3,3,3,5,2,4,4,4,4,4,2,2,7,7,1,7,7,7,7,7,3,3,5,5,5,3,3,5,2,2,2,4,4,4,2,4,7,7,7,1,1,7,1,7,3,5,3,5,5,5,3,5,2,4,4,4,2,4,4,2,7,1,7,7,1,1,7,7,5,3,5,5,3,3,3,3,4,4,2,4,2,4,4,4,1,1,1,1,1,7,7,7,5,5,5,5,5,3,5,5,2,2,2,2,2,2,2,4,0,9,0,0,9,9,9,0,7,1,1,1,7,1,1,7,2,4,2,4,4,4,4,4,0,9,0,0,0,0,0,0,7,7,1,1,7,1,1,1,2,4,2,4,2,4,4,4,9,9,0,0,9,0,9,9,1,1,1,7,7,7,7,1,2,4,2,4,4,4,2,4,0,8,0,0,0,0,0,9,7,1,7,7,1,7,7,1,2,2,2,4,2,2,2,2,9,9,0,0,0,0,9,9,1,7,7,1,7,7,7,7,4,4,4,4,2,4,2,4,0,0,0,0,9,9,0,9,7,7,1,7,7,1,1,7,2,4,4,4,2,4,2,4,0,9,0,0,0,9,0,9,7,7,7,1,1,1,7,1,4,4,2,4,2,4,2,4,0,0,0,0,9,0,0,0,7,1,7,7,1,1,7,1};
        if (i>lista.length-1){
            return lista[1];
        }else {
            return lista[i];
        }
    }

    public static void imprimatu(int [][]lista){
        for (int i =0;i< lista.length;i++){
            for (int e =0;e< lista.length;e++){
                System.out.print(lista[i][e]+" ");
            }
            System.out.println("Â ");
        }
    }
}